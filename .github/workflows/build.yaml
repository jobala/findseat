# This is a basic workflow to help you get started with Actions
name: Releases

# Controls when the workflow will run
on:
  push:
  # Triggers the workflow on push or pull request events but only for the tagged
  pull_request:
    branches:
      - "master"

  # A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  releases:
    name: release apk
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      JAVA_VERSION: "11.0"
      FLUTTER_VERSION: "3.13.2"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: "11.0"
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: "3.13.2"
      - run: flutter pub get
      # - run: flutter analyze
      # - run: flutter test
      - run: flutter build apk --release
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/flutter-apk/*.apk"
          token: ${{ vars.TOKEN }}
      - uses: hkusu/s3-upload-action@v2
        id: upload
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "us-east-1"
          aws-bucket: "quill-apks"
          file-path: "build/app/outputs/flutter-apk/app-development-release.apk"
          output-file-url: "true"
      - name: "Base64 encoding"
        id: encoding
        run: |
          out="${{ steps.upload.outputs.file-url }}"
          encodedURL=$(echo $out | base64 -w 0)
          echo "URL=$encodedURL" >> $GITHUB_OUTPUT
      - uses: actions/github-script@v7
        id: get_pr_data
        with:
          script: |
              return (
                await github.rest.repos.listPullRequestsAssociatedWithCommit({
                  commit_sha: context.sha,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                })
              ).data[0];
      - uses: mshick/add-pr-comment@v2
        with:
          message: |
            [QA Review On Quill](https://app.getquill.dev?owner=${{ github.repository_owner }}&repo=${{ github.event.repository.name }}&pr_number=${{ fromJson(steps.get_pr_data.outputs.result).number}}&pkg=com.example.test&url=${{ steps.encoding.outputs.URL }})
